steps:
  # 1. Build the application image, which is now very fast because it uses the base image.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '.'

  # 2. Push the lightweight application image to Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'

  # 3. Deploy the container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      set -e # Fail on any error

      # --- Default (development) settings ---
      MIN_INSTANCES="0"
      APP_ENV="local"
      SERVICE_NAME="qwen-embedding-api"
      
      # --- Production overrides for the 'main' branch ---
      if [ "$BRANCH_NAME" == "main" ]; then
        echo "Branch is 'main'. Applying production settings."
        MIN_INSTANCES="1"
        APP_ENV="production"
        SERVICE_NAME="qwen-embedding-api-prod"
      else
        echo "Branch is not 'main'. Applying development settings."
      fi

      # --- Action 1: Deploy the service as PRIVATE ---
      echo "Deploying service as private..."
      gcloud run deploy '$$SERVICE_NAME' \
        --image='${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/qwen-embedding-api:${SHORT_SHA}' \
        --region='${_LOCATION}' \
        --platform=managed \
        --memory=16Gi \
        --cpu=4 \
        --min-instances=$$MIN_INSTANCES \
        --cpu-boost \
        --timeout=600 \
        --concurrency=1 \
        --set-env-vars="APP_ENV=$$APP_ENV,ALLOWED_CALLER_EMAIL=vercel-backend-sa@data-pipelines-450611.iam.gserviceaccount.com" \
        --no-allow-unauthenticated

      # --- Action 2: Grant invocation permission to the specific service account ---
      echo "Setting invoker permission for vercel-backend-sa..."
      gcloud run services add-iam-policy-binding '$$SERVICE_NAME' \
        --region='${_LOCATION}' \
        --member='serviceAccount:vercel-backend-sa@data-pipelines-450611.iam.gserviceaccount.com' \
        --role='roles/run.invoker' \
        --quiet

# Store the final application image in Artifact Registry.
images:
  - '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'

# Define your substitution variables.
substitutions:
  _SERVICE_NAME: 'qwen-embedding-api'
  _REPO_NAME: 'embedding-services' # Must match the name of your Artifact Registry repo
  _LOCATION: 'us-central1'         # Should match the region of your Artifact Registry repo

# Specify the logging option. A powerful machine type is no longer needed here.
options:
  logging: CLOUD_LOGGING_ONLY